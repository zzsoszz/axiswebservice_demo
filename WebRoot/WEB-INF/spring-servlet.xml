<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:context="http://www.springframework.org/schema/context" 

	xsi:schemaLocation="http://www.springframework.org/schema/beans   
           http://www.springframework.org/schema/beans/spring-beans-3.1.xsd  
           http://www.springframework.org/schema/context   
           http://www.springframework.org/schema/context/spring-context-3.1.xsd
           http://www.springframework.org/schema/mvc
           http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		   "
	default-autowire="byName"
	>
	

	<!--
		如果有多个 DispatcherServlet 请把关于数据库和server部分的bean在web.xml中使用spring 的
		listener加载
	-->
	<!-- 自动扫描controller bean，把作了注解的类转换为bean -->
	<context:component-scan base-package="com.bxtel" use-default-filters="false">
		 <context:include-filter type="aspectj" expression="com.bxtel..bo..*"/>
		 <context:include-filter type="aspectj" expression="com.bxtel..util..*"/>
	 	 <context:include-filter type="aspectj" expression="com.bxtel..dao..*"/>
	 	 <context:include-filter type="aspectj" expression="com.bxtel.*.model.*"/>
	</context:component-scan>
	
	<!-- 
	<bean id="messageAdapter"
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean
					class="org.springframework.http.converter.StringHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>text/html;charset=UTF-8</value>
						</list>
					</property>
				</bean>
				<bean
					class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" />
			</list>
		</property>
	</bean>
 -->
	
	
	
	<!-- 事务  -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	
	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName">
            <value>java:comp/env/jdbc/jk</value>
        </property>
    </bean>
    
    
    <bean id="myjdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate" >
    	<property name="dataSource" ref="dataSource" />
    </bean>
    
    <bean id="mynamedParameterJdbcTemplate"  class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate" >
    	<constructor-arg  index="0" ref="dataSource"/>
    </bean>
    
	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />
	<!-- 对模型视图名称的解析，在请求时模型视图名称添加前后缀 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:prefix="/WEB-INF/views/" p:suffix=".jsp">
		<property name="order" value="0" />
	</bean>
	
	<!-- Spring的生命周期（转） 
	http://blog.csdn.net/liuxilil/article/details/4676088
	ApplicationContextHolder  
	 -->
	<bean class="com.bxtel.util.SpringContextHolder" lazy-init="false" />
	
    <!-- 
   	<bean id="helloWorld" class="com.bxtel.ltgx.bo.HelloWorldBean">
   	</bean>
   	
   	<bean id="ltgxBean" class="com.bxtel.ltgx.bo.GxltImplWebServiceImpl">
   	</bean>
   	 -->
</beans>  